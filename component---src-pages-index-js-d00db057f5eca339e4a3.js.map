{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./config/index.js","webpack:///./src/components/Subline.js","webpack:///./src/components/Article.js","webpack:///./src/components/Button.js","webpack:///./src/components/Header.js","webpack:///./src/components/SEO.js","webpack:///./config/theme.js","webpack:///./src/hooks/useBuildTime.js","webpack:///./src/components/Layout.js","webpack:///./src/components/PrevNext.js","webpack:///./src/components/SectionTitle.js","webpack:///./src/components/Wrapper.js","webpack:///./src/components/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","IndexQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_components__WEBPACK_IMPORTED_MODULE_3__","IndexPage","_ref","posts","data","allMdx","nodes","a","createElement","map","post","title","frontmatter","date","excerpt","timeToRead","slug","fields","categories","key","propTypes","PropTypes","shape","array","isRequired","module","exports","pathPrefix","siteTitle","siteTitleAlt","siteTitleManifest","siteUrl","siteLanguage","siteHeadline","siteBanner","favicon","siteDescription","author","siteLogo","userTwitter","ogSiteName","ogLanguage","googleAnalyticsID","themeColor","backgroundColor","Subline","styled","div","withConfig","displayName","componentId","props","theme","fontSize","small","colors","grey","light","sectionTitle","Post","article","breakpoints","phone","Title","h2","dark","primaryLight","Excerpt","p","Article","charAt","react_default","gatsby_browser_entry","to","components_Subline","cat","i","Fragment","kebabCase","string","number","Button","button","primary","big","white","transitions","normal","Avatar","img","Header","src","config","SEO","description","postNode","postPath","buildTime","realPrefix","homeURL","URL","image","schemaOrgWebPage","@context","@type","url","headline","inLanguage","mainEntityOfPage","name","copyrightHolder","copyrightYear","creator","publisher","datePublished","dateModified","itemListElement","item","@id","position","schemaArticle","parent","birthtime","logo","mtime","push","breadcrumb","Helmet_default","lang","content","property","siteFBAppID","type","JSON","stringify","object","bool","defaultProps","lighten","bg","default","ultraLight","tablet","fontFamily","serif","sansSerif","maxWidth","baseFontSize","useBuildTime","_1260220332","site","GlobalStyle","createGlobalStyle","_templateObject","color","Footer","footer","Layout","children","customSEO","styled_components_browser_esm","components_SEO","oneOfType","node","Wrapper","Prev","Next","PrevNext","next","prev","SectionTitle","components_Article","components_Button","components_Header","components_Layout","components_PrevNext","components_SectionTitle","components_Wrapper"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,+BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,IAAAS,EAAAT,EAAAO,EAAAC,GAAAE,GAAAV,EAAA,KAAAA,EAAA,MAOMW,EAAY,SAAAC,GAAA,IAEGC,EAFHD,EAChBE,KACEC,OAAUC,MAFI,OAKhBV,EAAAW,EAAAC,cAACR,EAAA,EAAD,KACEJ,EAAAW,EAAAC,cAACR,EAAA,EAAD,KACEJ,EAAAW,EAAAC,cAACR,EAAA,EAAD,MAECG,EAAMM,IAAI,SAAAC,GAAI,OACbd,EAAAW,EAAAC,cAACR,EAAA,EAAD,CACEW,MAAOD,EAAKE,YAAYD,MACxBE,KAAMH,EAAKE,YAAYC,KACvBC,QAASJ,EAAKI,QACdC,WAAYL,EAAKK,WACjBC,KAAMN,EAAKO,OAAOD,KAClBE,WAAYR,EAAKE,YAAYM,WAC7BC,IAAKT,EAAKO,OAAOD,YAOZf,YAEfA,EAAUmB,UAAY,CACpBhB,KAAMiB,IAAUC,MAAM,CACpBjB,OAAQgB,IAAUC,MAAM,CACtBhB,MAAOe,IAAUE,MAAMC,eAExBA,YAGE,IAAM9B,EAAU,+BCzCvB+B,EAAOC,QAAU,CACfC,WAAY,IAEZC,UAAW,iBACXC,aAAc,sBACdC,kBAAmB,cACnBC,QAAS,0BACTC,aAAc,KACdC,aAAc,oBACdC,WAAY,GACZC,QAAS,kBACTC,gBAAiB,kFACjBC,OAAQ,iBACRC,SAAU,GAGVC,YAAa,SACbC,WAAY,GACZC,WAAY,QACZC,kBAAmB,iBAInBC,WAAY,UACZC,gBAAiB,oLCdJC,UARCC,IAAOC,IAAVC,WAAA,CAAAC,YAAA,UAAAC,YAAA,eAAGJ,CAAH,yCACE,SAAAK,GAAK,OAAIA,EAAMC,MAAMC,SAASC,OAClC,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,OAAOC,KAAKC,OACxC,SAAAN,GAAK,OAAIA,EAAMO,cAAgB,qBAC/B,SAAAP,GAAK,OAAIA,EAAMO,cAAgB,uBAC/B,SAAAP,GAAK,OAAIA,EAAMO,cAAgB,wBCC7BC,EAAOb,IAAOc,QAAVZ,WAAA,CAAAC,YAAA,gBAAAC,YAAA,gBAAGJ,CAAH,0IAMa,SAAAK,GAAK,OAAIA,EAAMC,MAAMS,YAAYC,QAMlDC,EAAQjB,IAAOkB,GAAVhB,WAAA,CAAAC,YAAA,iBAAAC,YAAA,gBAAGJ,CAAH,sHAKE,SAAAK,GAAK,OAAIA,EAAMC,MAAMG,OAAOC,KAAKS,MAE/B,SAAAd,GAAK,OAAIA,EAAMC,MAAMG,OAAOW,eAKrCC,EAAUrB,IAAOsB,EAAVpB,WAAA,CAAAC,YAAA,mBAAAC,YAAA,gBAAGJ,CAAH,4DAMPuB,EAAU,SAAAnE,GAA4D,IAAzDS,EAAyDT,EAAzDS,MAAOE,EAAkDX,EAAlDW,KAAMC,EAA4CZ,EAA5CY,QAASE,EAAmCd,EAAnCc,KAAMD,EAA6Bb,EAA7Ba,WAAYG,EAAiBhB,EAAjBgB,WACvCP,EAAM2D,OAAO,GAE/B,OACEC,EAAAhE,EAAAC,cAACmD,EAAD,KACEY,EAAAhE,EAAAC,cAACuD,EAAD,KACEQ,EAAAhE,EAAAC,cAACgE,EAAA,KAAD,CAAMC,GAAIzD,GAAOL,IAEnB4D,EAAAhE,EAAAC,cAACkE,EAAD,KACG7D,EADH,MACkBE,EADlB,iBACkD,IAC/CG,EAAWT,IAAI,SAACkE,EAAKC,GAAN,OACdL,EAAAhE,EAAAC,cAAC+D,EAAAhE,EAAMsE,SAAP,CAAgB1D,IAAKwD,KAChBC,GAAK,KACRL,EAAAhE,EAAAC,cAACgE,EAAA,KAAD,CAAMC,GAAE,eAAiBK,IAAUH,IAASA,OAIlDJ,EAAAhE,EAAAC,cAAC2D,EAAD,KAAUrD,KAKDuD,IAEfA,EAAQjD,UAAY,CAClBT,MAAOU,IAAU0D,OAAOvD,WACxBX,KAAMQ,IAAU0D,OAAOvD,WACvBV,QAASO,IAAU0D,OAAOvD,WAC1BR,KAAMK,IAAU0D,OAAOvD,WACvBT,WAAYM,IAAU2D,OAAOxD,WAC7BN,WAAYG,IAAUE,MAAMC,uBCvCfyD,EA3BAnC,IAAOoC,OAAVlC,WAAA,CAAAC,YAAA,SAAAC,YAAA,YAAGJ,CAAH,sWACI,SAAAK,GAAK,OAAIA,EAAMC,MAAMG,OAAO4B,SAIzB,SAAAhC,GAAK,OAAKA,EAAMiC,IAAM,SAAW,QACrC,SAAAjC,GAAK,OAAKA,EAAMiC,IAAM,SAAW,QACrC,SAAAjC,GAAK,OAAIA,EAAMC,MAAMG,OAAO8B,OAC1B,SAAAlC,GAAK,OAAKA,EAAMiC,IAAM,iBAAmB,mBAClC,SAAAjC,GAAK,OAAIA,EAAMC,MAAMkC,YAAYC,QAGnC,SAAApC,GAAK,OAAIA,EAAMC,MAAMG,OAAOW,cAWlC,SAAAf,GAAK,OAAIA,EAAMC,MAAMG,OAAO8B,0BCpBlCG,EAAS1C,IAAO2C,IAAVzC,WAAA,CAAAC,YAAA,iBAAAC,YAAA,gBAAGJ,CAAH,sEAgBG4C,EATA,kBACbnB,EAAAhE,EAAAC,cAAA,cACE+D,EAAAhE,EAAAC,cAACgE,EAAA,KAAD,CAAMC,GAAG,KACPF,EAAAhE,EAAAC,cAACgF,EAAD,CAAQG,IAAI,uBACXC,IAAOhE,+BCVRiE,EAAM,SAAA1C,GAAS,IAGfxC,EACAmF,EAHIC,EAA2C5C,EAA3C4C,SAAUC,EAAiC7C,EAAjC6C,SAAUpC,EAAuBT,EAAvBS,QAASqC,EAAc9C,EAAd8C,UAK/BC,EAAmC,MAAtBN,IAAOjE,WAAqB,GAAKiE,IAAOjE,WACrDwE,EAAO,GAAMP,IAAO7D,QAAUmE,EAC9BE,EAAG,GAAMD,GAAUH,GAAY,IAC/BK,EAAK,GAAMF,EAAUP,IAAO1D,WAE9B0B,GAEFjD,EADiBoF,EAASnF,YACND,MAAf,MAA0BiF,IAAOhE,UACtCkE,EAAcC,EAASjF,UAEvBH,EAAQiF,IAAO/D,aACfiE,EAAcF,IAAOxD,iBAOvB,IAAMkE,EAAmB,CACvBC,WAAY,oBACZC,QAAS,UACTC,IAAKL,EACLM,SAAUd,IAAO3D,aACjB0E,WAAYf,IAAO5D,aACnB4E,iBAAkBR,EAClBN,YAAaF,IAAOxD,gBACpByE,KAAMjB,IAAOhE,UACbS,OAAQ,CACNmE,QAAS,SACTK,KAAMjB,IAAOvD,QAEfyE,gBAAiB,CACfN,QAAS,SACTK,KAAMjB,IAAOvD,QAEf0E,cAAe,OACfC,QAAS,CACPR,QAAS,SACTK,KAAMjB,IAAOvD,QAEf4E,UAAW,CACTT,QAAS,SACTK,KAAMjB,IAAOvD,QAEf6E,cAAe,4BACfC,aAAclB,EACdI,MAAO,CACLG,QAAS,cACTC,IAAKJ,IAMHe,EAAkB,CACtB,CACEZ,QAAS,WACTa,KAAM,CACJC,MAAOnB,EACPU,KAAM,YAERU,SAAU,GAEZ,CACEf,QAAS,WACTa,KAAM,CACJC,MAAUnB,EAAV,WACAU,KAAM,WAERU,SAAU,IAIVC,EAAgB,KAEhB5D,IACF4D,EAAgB,CACdjB,WAAY,oBACZC,QAAS,UACTnE,OAAQ,CACNmE,QAAS,SACTK,KAAMjB,IAAOvD,QAEfyE,gBAAiB,CACfN,QAAS,SACTK,KAAMjB,IAAOvD,QAEf0E,cAAehB,EAAS0B,OAAOC,UAC/BV,QAAS,CACPR,QAAS,SACTK,KAAMjB,IAAOvD,QAEf4E,UAAW,CACTT,QAAS,eACTK,KAAMjB,IAAOvD,OACbsF,KAAM,CACJnB,QAAS,cACTC,IAAG,GAAKN,EAAUP,IAAOtD,WAG7B4E,cAAenB,EAAS0B,OAAOC,UAC/BP,aAAcpB,EAAS0B,OAAOG,MAC9B9B,cACAY,SAAU/F,EACVgG,WAAY,KACZF,IAAKL,EACLS,KAAMlG,EACN0F,MAAO,CACLG,QAAS,cACTC,IAAKJ,GAEPO,iBAAkBR,GAGpBgB,EAAgBS,KAAK,CACnBrB,QAAS,WACTa,KAAM,CACJC,MAAOlB,EACPS,KAAMlG,GAER4G,SAAU,KAId,IAAMO,EAAa,CACjBvB,WAAY,oBACZC,QAAS,iBACTV,YAAa,mBACbe,KAAM,cACNO,mBAGF,OACE7C,EAAAhE,EAAAC,cAACuH,EAAAxH,EAAD,KACEgE,EAAAhE,EAAAC,cAAA,QAAMwH,KAAMpC,IAAO5D,eACnBuC,EAAAhE,EAAAC,cAAA,aAAQG,GACR4D,EAAAhE,EAAAC,cAAA,QAAMqG,KAAK,cAAcoB,QAASnC,IAClCvB,EAAAhE,EAAAC,cAAA,QAAMqG,KAAK,QAAQoB,QAAS5B,IAC5B9B,EAAAhE,EAAAC,cAAA,QAAMqG,KAAK,iBAAiBoB,QAAQ,gCACpC1D,EAAAhE,EAAAC,cAAA,QAAM0H,SAAS,YAAYD,QAASrC,IAAOnD,aAC3C8B,EAAAhE,EAAAC,cAAA,QAAM0H,SAAS,eAAeD,QAASrC,IAAOpD,WAAaoD,IAAOpD,WAAa,KAC/E+B,EAAAhE,EAAAC,cAAA,QAAM0H,SAAS,SAASD,QAAS7B,IACjC7B,EAAAhE,EAAAC,cAAA,QAAM0H,SAAS,UAAUD,QAASrE,EAAU,UAAY,YACxDW,EAAAhE,EAAAC,cAAA,QAAM0H,SAAS,WAAWD,QAAStH,IACnC4D,EAAAhE,EAAAC,cAAA,QAAM0H,SAAS,iBAAiBD,QAASnC,IACzCvB,EAAAhE,EAAAC,cAAA,QAAM0H,SAAS,WAAWD,QAAS5B,IACnC9B,EAAAhE,EAAAC,cAAA,QAAM0H,SAAS,eAAeD,QAASnC,IACtCF,IAAOuC,aAAe5D,EAAAhE,EAAAC,cAAA,QAAM0H,SAAS,YAAYD,QAASrC,IAAOuC,cAClE5D,EAAAhE,EAAAC,cAAA,QAAMqG,KAAK,eAAeoB,QAAQ,wBAClC1D,EAAAhE,EAAAC,cAAA,QAAMqG,KAAK,kBAAkBoB,QAASrC,IAAOrD,YAAcqD,IAAOrD,YAAc,KAChFgC,EAAAhE,EAAAC,cAAA,QAAMqG,KAAK,gBAAgBoB,QAAStH,IACpC4D,EAAAhE,EAAAC,cAAA,QAAMqG,KAAK,cAAcoB,QAASrC,IAAO7D,UACzCwC,EAAAhE,EAAAC,cAAA,QAAMqG,KAAK,sBAAsBoB,QAASnC,IAC1CvB,EAAAhE,EAAAC,cAAA,QAAMqG,KAAK,gBAAgBoB,QAAS5B,IACpC9B,EAAAhE,EAAAC,cAAA,QAAMqG,KAAK,oBAAoBoB,QAASnC,KAEtClC,GAAWW,EAAAhE,EAAAC,cAAA,UAAQ4H,KAAK,uBAAuBC,KAAKC,UAAUhC,IAC/D1C,GAAWW,EAAAhE,EAAAC,cAAA,UAAQ4H,KAAK,uBAAuBC,KAAKC,UAAUd,IAC/DjD,EAAAhE,EAAAC,cAAA,UAAQ4H,KAAK,uBAAuBC,KAAKC,UAAUR,MAK1CjC,IAEfA,EAAIzE,UAAY,CACd2E,SAAU1E,IAAUkH,OACpBvC,SAAU3E,IAAU0D,OACpBnB,QAASvC,IAAUmH,KACnBvC,UAAW5E,IAAU0D,QAGvBc,EAAI4C,aAAe,CACjB1C,SAAU,KACVC,SAAU,KACVpC,SAAS,EACTqC,UAAW,mBCjJE7C,EAVD,CACZG,OAhCa,CACb4B,QAAS,UACTjB,aAAcwE,YAAQ,IAAM,WAC5BC,GAAI,UACJnF,KAAM,CACJS,KAAM,qBACN2E,QAAS,qBACTnF,MAAO,qBACPoF,WAAY,uBAEdxD,MAAO,SAuBPC,YApBkB,CAClBC,OAAQ,QAoBRlC,SAjBe,CACfC,MAAO,UAiBPO,YATkB,CAClBiF,OAAQ,SACRhF,MAAO,SAQPiF,WAfiB,CACjBC,MAAK,iGACLC,UAAS,0GAcTC,SAAU,QACVC,aAAc,iBC1BDC,EAZM,WASnB,OARaC,EAAAjJ,KAQDkJ,KAAKrD,u1GCHnB,IAAMsD,EAAcC,YAAHC,IAYJ,SAAAtG,GAAK,OAAIA,EAAMC,MAAMG,OAAOoF,IACvB,SAAAxF,GAAK,OAAIA,EAAMC,MAAMG,OAAO4B,SAG3B,SAAAhC,GAAK,OAAIA,EAAMC,MAAM2F,WAAWE,WAClC,SAAA9F,GAAK,OAAIA,EAAMC,MAAM+F,cAgBb,SAAAhG,GAAK,OAAIA,EAAMC,MAAMS,YAAYC,OAoBxC,SAAAX,GAAK,OAAIA,EAAMC,MAAMG,OAAOoF,IACjC,SAAAxF,GAAK,OAAIA,EAAMC,MAAMG,OAAOC,KAAKoF,SAGjC,SAAAzF,GAAK,OAAIA,EAAMC,MAAMG,OAAO4B,SAEnB,SAAAhC,GAAK,OAAIA,EAAMC,MAAMkC,YAAYC,QAG1C,SAAApC,GAAK,OAAIA,EAAMC,MAAMG,OAAOW,cAe5B,SAAAf,GAAK,OAAIA,EAAMC,MAAMG,OAAOC,KAAKS,MAC3B,SAAAd,GAAK,OAAIA,EAAMC,MAAM2F,WAAWC,OAUjC,SAAA7F,GAAK,OAAIA,EAAMC,MAAMG,OAAO4B,SAOjC,SAAAhC,GAAK,OAAIA,EAAMC,MAAMG,OAAOC,KAAKS,MAM3B,SAAAd,GAAK,OAAIA,EAAMC,MAAM2F,WAAWE,WAuC3B,SAAA9F,GAAK,OAAIA,EAAMC,MAAMG,OAAOoF,IAKvC,SAAAxF,GAAK,OAAIA,EAAMC,MAAMG,OAAOmG,QAgDnCC,EAAS7G,IAAO8G,OAAV5G,WAAA,CAAAC,YAAA,iBAAAC,YAAA,eAAGJ,CAAH,kEAQN+G,EAAS,SAAA3J,GAA6B,IAA1B4J,EAA0B5J,EAA1B4J,SAAUC,EAAgB7J,EAAhB6J,UACpB9D,EAAYmD,IAElB,OACE7E,EAAAhE,EAAAC,cAACwJ,EAAA,EAAD,CAAe5G,MAAOA,GACpBmB,EAAAhE,EAAAC,cAAA+D,EAAAhE,EAAAsE,SAAA,MACIkF,GAAaxF,EAAAhE,EAAAC,cAACyJ,EAAD,CAAKhE,UAAWA,IAC/B1B,EAAAhE,EAAAC,cAAC+I,EAAD,MACCO,EACDvF,EAAAhE,EAAAC,cAACmJ,EAAD,KACEpF,EAAAhE,EAAAC,cAAA,uBAOKqJ,IAEfA,EAAOzI,UAAY,CACjB0I,SAAUzI,IAAU6I,UAAU,CAAC7I,IAAUE,MAAOF,IAAU8I,OAAO3I,WACjEuI,UAAW1I,IAAUmH,MAGvBqB,EAAOpB,aAAe,CACpBsB,WAAW,GCrOb,IAAMK,EAAUtH,IAAOC,IAAVC,WAAA,CAAAC,YAAA,oBAAAC,YAAA,eAAGJ,CAAH,4GAIA,SAAAK,GAAK,OAAIA,EAAMC,MAAMG,OAAO4B,UAOnCkF,EAAOvH,IAAOC,IAAVC,WAAA,CAAAC,YAAA,iBAAAC,YAAA,eAAGJ,CAAH,+DAIG,SAAAK,GAAK,OAAIA,EAAMC,MAAMG,OAAOC,KAAKC,QAIxC6G,EAAOxH,IAAOC,IAAVC,WAAA,CAAAC,YAAA,iBAAAC,YAAA,eAAGJ,CAAH,iGAMG,SAAAK,GAAK,OAAIA,EAAMC,MAAMG,OAAOC,KAAKC,QAIxC8G,EAAW,SAAArK,GAAA,IAAGsK,EAAHtK,EAAGsK,KAAMC,EAATvK,EAASuK,KAAT,OACflG,EAAAhE,EAAAC,cAAC4J,EAAD,KACGK,GACClG,EAAAhE,EAAAC,cAAC6J,EAAD,KACE9F,EAAAhE,EAAAC,cAAA,wBACA+D,EAAAhE,EAAAC,cAACgE,EAAA,KAAD,CAAMC,GAAIgG,EAAKxJ,OAAOD,MAAOyJ,EAAK7J,YAAYD,QAIjD6J,GACCjG,EAAAhE,EAAAC,cAAC8J,EAAD,KACE/F,EAAAhE,EAAAC,cAAA,oBACA+D,EAAAhE,EAAAC,cAACgE,EAAA,KAAD,CAAMC,GAAI+F,EAAKvJ,OAAOD,MAAOwJ,EAAK5J,YAAYD,UAMvC4J,IAEfA,EAASnJ,UAAY,CACnBoJ,KAAMnJ,IAAUkH,OAChBkC,KAAMpJ,IAAUkH,QAGlBgC,EAAS9B,aAAe,CACtB+B,KAAM,KACNC,KAAM,MC3DR,IAuBeC,EAvBM5H,IAAOC,IAAVC,WAAA,CAAAC,YAAA,eAAAC,YAAA,YAAGJ,CAAH,iRACH,SAAAK,GAAK,OAAIA,EAAMC,MAAMC,SAASC,OAIlC,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,OAAOC,KAAKS,MAc1B,SAAAd,GAAK,OAAIA,EAAMC,MAAMG,OAAOC,KAAKqF,aCIpCuB,EAvBCtH,IAAOC,IAAVC,WAAA,CAAAC,YAAA,UAAAC,YAAA,gBAAGJ,CAAH,qSACE,SAAAK,GAAK,OAAIA,EAAMC,MAAM8F,UAGb,SAAA/F,GAAK,OAAIA,EAAMC,MAAMS,YAAYiF,QAGjC,SAAA3F,GAAK,OAAIA,EAAMC,MAAMS,YAAYC,OAU/B,SAAAX,GAAK,OAAIA,EAAMC,MAAMS,YAAYC,QCnB1DxE,EAAAG,EAAAD,EAAA,sBAAAmL,IAAArL,EAAAG,EAAAD,EAAA,sBAAAoL,IAAAtL,EAAAG,EAAAD,EAAA,sBAAAqL,IAAAvL,EAAAG,EAAAD,EAAA,sBAAAsL,IAAAxL,EAAAG,EAAAD,EAAA,sBAAAuL,IAAAzL,EAAAG,EAAAD,EAAA,sBAAAwL,IAAA1L,EAAAG,EAAAD,EAAA,sBAAAyK,IAAA3K,EAAAG,EAAAD,EAAA,sBAAAkF,IAAApF,EAAAG,EAAAD,EAAA,sBAAAyL","file":"component---src-pages-index-js-d00db057f5eca339e4a3.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link, graphql } from 'gatsby'\r\nimport styled from 'styled-components'\r\n\r\nimport { Layout, Article, Wrapper, Header, Content } from '../components'\r\n\r\nconst IndexPage = ({\r\n  data: {\r\n    allMdx: { nodes: posts },\r\n  },\r\n}) => (\r\n  <Layout>\r\n    <Wrapper>\r\n      <Header />\r\n\r\n      {posts.map(post => (\r\n        <Article\r\n          title={post.frontmatter.title}\r\n          date={post.frontmatter.date}\r\n          excerpt={post.excerpt}\r\n          timeToRead={post.timeToRead}\r\n          slug={post.fields.slug}\r\n          categories={post.frontmatter.categories}\r\n          key={post.fields.slug}\r\n        />\r\n      ))}\r\n    </Wrapper>\r\n  </Layout>\r\n)\r\n\r\nexport default IndexPage\r\n\r\nIndexPage.propTypes = {\r\n  data: PropTypes.shape({\r\n    allMdx: PropTypes.shape({\r\n      nodes: PropTypes.array.isRequired,\r\n    }),\r\n  }).isRequired,\r\n}\r\n\r\nexport const IndexQuery = graphql`\r\n  query IndexQuery {\r\n    allMdx(sort: { fields: [frontmatter___date], order: DESC }) {\r\n      nodes {\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          title\r\n          date(formatString: \"YYYY-MM-DD\")\r\n          categories\r\n        }\r\n        excerpt(pruneLength: 200)\r\n        timeToRead\r\n      }\r\n    }\r\n  }\r\n`\r\n","module.exports = {\r\n  pathPrefix: '/', // Prefix for all links. If you deploy your site to example.com/portfolio your pathPrefix should be \"portfolio\"\r\n\r\n  siteTitle: 'Breno Calazans', // Navigation and Site Title\r\n  siteTitleAlt: 'Breno Calazans Blog', // Alternative Site title for SEO\r\n  siteTitleManifest: '@klzns Blog',\r\n  siteUrl: 'https://klzns.github.io', // Domain of your site. No trailing slash!\r\n  siteLanguage: 'en', // Language Tag on <html> element\r\n  siteHeadline: 'Sharing code tips', // Headline for schema.org JSONLD\r\n  siteBanner: '', // Your image for og:image tag. You can find it in the /static folder\r\n  favicon: 'src/favicon.png', // Your image for favicons. You can find it in the /src folder\r\n  siteDescription: 'Personal blog by Breno Calazans. Sharing tips on code and software development.', // Your site description\r\n  author: 'Breno Calazans', // Author for schemaORGJSONLD\r\n  siteLogo: '', // Image for schemaORGJSONLD\r\n\r\n  // siteFBAppID: '123456789', // Facebook App ID - Optional\r\n  userTwitter: '@klzns', // Twitter Username - Optional\r\n  ogSiteName: '', // Facebook Site Name - Optional\r\n  ogLanguage: 'en_US', // Facebook Language\r\n  googleAnalyticsID: 'UA-143581029-1',\r\n\r\n  // Manifest and Progress color\r\n  // See: https://developers.google.com/web/fundamentals/web-app-manifest/\r\n  themeColor: '#6c2ed0',\r\n  backgroundColor: '#fff',\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst Subline = styled.div`\r\n  font-size: ${props => props.theme.fontSize.small};\r\n  color: ${props => props.theme.colors.grey.light};\r\n  ${props => props.sectionTitle && 'margin-top: -3rem'};\r\n  ${props => props.sectionTitle && 'margin-bottom: 4rem'};\r\n  ${props => props.sectionTitle && 'text-align: center'};\r\n`\r\n\r\nexport default Subline\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'gatsby'\r\nimport kebabCase from 'lodash/kebabCase'\r\n\r\nimport Subline from './Subline'\r\n\r\nconst Post = styled.article`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 3.5rem;\r\n  margin-bottom: 3.5rem;\r\n\r\n  @media (max-width: ${props => props.theme.breakpoints.phone}) {\r\n    margin-top: 2rem;\r\n    margin-bottom: 2rem;\r\n  }\r\n`\r\n\r\nconst Title = styled.h2`\r\n  position: relative;\r\n  text-shadow: 0 12px 30px rgba(0, 0, 0, 0.15);\r\n  margin-bottom: 0.75rem;\r\n  a {\r\n    color: ${props => props.theme.colors.grey.dark};\r\n    &:hover {\r\n      color: ${props => props.theme.colors.primaryLight};\r\n    }\r\n  }\r\n`\r\n\r\nconst Excerpt = styled.p`\r\n  grid-column: -1 / 1;\r\n  margin-top: 1rem;\r\n  margin-bottom: 1rem;\r\n`\r\n\r\nconst Article = ({ title, date, excerpt, slug, timeToRead, categories }) => {\r\n  const firstChar = title.charAt(0)\r\n\r\n  return (\r\n    <Post>\r\n      <Title>\r\n        <Link to={slug}>{title}</Link>\r\n      </Title>\r\n      <Subline>\r\n        {date} &mdash; {timeToRead} Min Read &mdash; In{' '}\r\n        {categories.map((cat, i) => (\r\n          <React.Fragment key={cat}>\r\n            {!!i && ', '}\r\n            <Link to={`/categories/${kebabCase(cat)}`}>{cat}</Link>\r\n          </React.Fragment>\r\n        ))}\r\n      </Subline>\r\n      <Excerpt>{excerpt}</Excerpt>\r\n    </Post>\r\n  )\r\n}\r\n\r\nexport default Article\r\n\r\nArticle.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  date: PropTypes.string.isRequired,\r\n  excerpt: PropTypes.string.isRequired,\r\n  slug: PropTypes.string.isRequired,\r\n  timeToRead: PropTypes.number.isRequired,\r\n  categories: PropTypes.array.isRequired,\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst Button = styled.button`\r\n  background: ${props => props.theme.colors.primary};\r\n  border: none;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  border-radius: ${props => (props.big ? '1.5rem' : '1rem')};\r\n  font-size: ${props => (props.big ? '1.2rem' : '1rem')};\r\n  color: ${props => props.theme.colors.white};\r\n  padding: ${props => (props.big ? '0.5rem 1.75rem' : '0.35rem 1.65rem')};\r\n  transition: all ${props => props.theme.transitions.normal};\r\n  box-shadow: 0 4px 6px rgba(50, 50, 93, 0.11), 0 1px 3px rgba(0, 0, 0, 0.08);\r\n  &:hover {\r\n    background: ${props => props.theme.colors.primaryLight};\r\n    cursor: pointer;\r\n    transform: translateY(-2px);\r\n  }\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  svg {\r\n    width: 20px;\r\n    height: 20px;\r\n    margin-right: 0.75rem;\r\n    fill: ${props => props.theme.colors.white};\r\n  }\r\n`\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport config from '../../config'\r\nimport styled from 'styled-components'\r\n\r\nconst Avatar = styled.img`\r\n  border-radius: 100%;\r\n  width: 3.5rem;\r\n  height: 3.5rem;\r\n  margin-right: 1rem;\r\n`\r\n\r\nconst Header = () => (\r\n  <header>\r\n    <Link to=\"/\">\r\n      <Avatar src=\"/social/avatar.jpg\" />\r\n      {config.siteTitle}\r\n    </Link>\r\n  </header>\r\n)\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Helmet from 'react-helmet'\r\n\r\nimport config from '../../config'\r\n\r\nconst SEO = props => {\r\n  const { postNode, postPath, article, buildTime } = props\r\n\r\n  let title\r\n  let description\r\n\r\n  const realPrefix = config.pathPrefix === '/' ? '' : config.pathPrefix\r\n  const homeURL = `${config.siteUrl}${realPrefix}`\r\n  const URL = `${homeURL}${postPath || ''}`\r\n  const image = `${homeURL}${config.siteBanner}`\r\n\r\n  if (article) {\r\n    const postMeta = postNode.frontmatter\r\n    title = `${postMeta.title} | ${config.siteTitle}`\r\n    description = postNode.excerpt\r\n  } else {\r\n    title = config.siteTitleAlt\r\n    description = config.siteDescription\r\n  }\r\n\r\n  // schema.org in JSONLD format\r\n  // https://developers.google.com/search/docs/guides/intro-structured-data\r\n  // You can fill out the 'author', 'creator' with more data or another type (e.g. 'Organization')\r\n\r\n  const schemaOrgWebPage = {\r\n    '@context': 'http://schema.org',\r\n    '@type': 'WebPage',\r\n    url: URL,\r\n    headline: config.siteHeadline,\r\n    inLanguage: config.siteLanguage,\r\n    mainEntityOfPage: URL,\r\n    description: config.siteDescription,\r\n    name: config.siteTitle,\r\n    author: {\r\n      '@type': 'Person',\r\n      name: config.author,\r\n    },\r\n    copyrightHolder: {\r\n      '@type': 'Person',\r\n      name: config.author,\r\n    },\r\n    copyrightYear: '2018',\r\n    creator: {\r\n      '@type': 'Person',\r\n      name: config.author,\r\n    },\r\n    publisher: {\r\n      '@type': 'Person',\r\n      name: config.author,\r\n    },\r\n    datePublished: '2019-01-07T10:30:00+01:00',\r\n    dateModified: buildTime,\r\n    image: {\r\n      '@type': 'ImageObject',\r\n      url: image,\r\n    },\r\n  }\r\n\r\n  // Initial breadcrumb list\r\n\r\n  const itemListElement = [\r\n    {\r\n      '@type': 'ListItem',\r\n      item: {\r\n        '@id': homeURL,\r\n        name: 'Homepage',\r\n      },\r\n      position: 1,\r\n    },\r\n    {\r\n      '@type': 'ListItem',\r\n      item: {\r\n        '@id': `${homeURL}/contact`,\r\n        name: 'Contact',\r\n      },\r\n      position: 2,\r\n    },\r\n  ]\r\n\r\n  let schemaArticle = null\r\n\r\n  if (article) {\r\n    schemaArticle = {\r\n      '@context': 'http://schema.org',\r\n      '@type': 'Article',\r\n      author: {\r\n        '@type': 'Person',\r\n        name: config.author,\r\n      },\r\n      copyrightHolder: {\r\n        '@type': 'Person',\r\n        name: config.author,\r\n      },\r\n      copyrightYear: postNode.parent.birthtime,\r\n      creator: {\r\n        '@type': 'Person',\r\n        name: config.author,\r\n      },\r\n      publisher: {\r\n        '@type': 'Organization',\r\n        name: config.author,\r\n        logo: {\r\n          '@type': 'ImageObject',\r\n          url: `${homeURL}${config.siteLogo}`,\r\n        },\r\n      },\r\n      datePublished: postNode.parent.birthtime,\r\n      dateModified: postNode.parent.mtime,\r\n      description,\r\n      headline: title,\r\n      inLanguage: 'en',\r\n      url: URL,\r\n      name: title,\r\n      image: {\r\n        '@type': 'ImageObject',\r\n        url: image,\r\n      },\r\n      mainEntityOfPage: URL,\r\n    }\r\n    // Push current blogpost into breadcrumb list\r\n    itemListElement.push({\r\n      '@type': 'ListItem',\r\n      item: {\r\n        '@id': URL,\r\n        name: title,\r\n      },\r\n      position: 3,\r\n    })\r\n  }\r\n\r\n  const breadcrumb = {\r\n    '@context': 'http://schema.org',\r\n    '@type': 'BreadcrumbList',\r\n    description: 'Breadcrumbs list',\r\n    name: 'Breadcrumbs',\r\n    itemListElement,\r\n  }\r\n\r\n  return (\r\n    <Helmet>\r\n      <html lang={config.siteLanguage} />\r\n      <title>{title}</title>\r\n      <meta name=\"description\" content={description} />\r\n      <meta name=\"image\" content={image} />\r\n      <meta name=\"gatsby-starter\" content=\"Gatsby Starter Minimal Blog\" />\r\n      <meta property=\"og:locale\" content={config.ogLanguage} />\r\n      <meta property=\"og:site_name\" content={config.ogSiteName ? config.ogSiteName : ''} />\r\n      <meta property=\"og:url\" content={URL} />\r\n      <meta property=\"og:type\" content={article ? 'article' : 'website'} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={description} />\r\n      <meta property=\"og:image\" content={image} />\r\n      <meta property=\"og:image:alt\" content={description} />\r\n      {config.siteFBAppID && <meta property=\"fb:app_id\" content={config.siteFBAppID} />}\r\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n      <meta name=\"twitter:creator\" content={config.userTwitter ? config.userTwitter : ''} />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:url\" content={config.siteUrl} />\r\n      <meta name=\"twitter:description\" content={description} />\r\n      <meta name=\"twitter:image\" content={image} />\r\n      <meta name=\"twitter:image:alt\" content={description} />\r\n      {/* Insert schema.org data conditionally (webpage/article) + everytime (breadcrumbs) */}\r\n      {!article && <script type=\"application/ld+json\">{JSON.stringify(schemaOrgWebPage)}</script>}\r\n      {article && <script type=\"application/ld+json\">{JSON.stringify(schemaArticle)}</script>}\r\n      <script type=\"application/ld+json\">{JSON.stringify(breadcrumb)}</script>\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nexport default SEO\r\n\r\nSEO.propTypes = {\r\n  postNode: PropTypes.object,\r\n  postPath: PropTypes.string,\r\n  article: PropTypes.bool,\r\n  buildTime: PropTypes.string,\r\n}\r\n\r\nSEO.defaultProps = {\r\n  postNode: null,\r\n  postPath: null,\r\n  article: false,\r\n  buildTime: null,\r\n}\r\n","import { lighten } from 'polished'\r\n\r\nconst colors = {\r\n  primary: '#6c2ed0', // Color for buttons or links\r\n  primaryLight: lighten(0.05, '#6c2ed0'),\r\n  bg: '#fffafa', // Background color\r\n  grey: {\r\n    dark: 'rgba(0, 0, 0, 0.9)',\r\n    default: 'rgba(0, 0, 0, 0.7)',\r\n    light: 'rgba(0, 0, 0, 0.5)',\r\n    ultraLight: 'rgba(0, 0, 0, 0.25)',\r\n  },\r\n  white: 'white',\r\n}\r\n\r\nconst transitions = {\r\n  normal: '0.5s',\r\n}\r\n\r\nconst fontSize = {\r\n  small: '0.9rem',\r\n}\r\n\r\nconst fontFamily = {\r\n  serif: `'Bitter', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Helvetica', 'Arial', serif`,\r\n  sansSerif: `'Open Sans', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Helvetica', 'Arial', sans-serif`,\r\n}\r\n\r\nconst breakpoints = {\r\n  tablet: '1200px',\r\n  phone: '600px',\r\n}\r\n\r\nconst theme = {\r\n  colors,\r\n  transitions,\r\n  fontSize,\r\n  breakpoints,\r\n  fontFamily,\r\n  maxWidth: '650px',\r\n  baseFontSize: '18px',\r\n}\r\n\r\nexport default theme\r\n","import { useStaticQuery, graphql } from 'gatsby'\r\n\r\nconst useBuildTime = () => {\r\n  const time = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        buildTime(formatString: \"YYYY-MM-DD\")\r\n      }\r\n    }\r\n  `)\r\n\r\n  return time.site.buildTime\r\n}\r\n\r\nexport default useBuildTime\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled, { ThemeProvider, createGlobalStyle } from 'styled-components'\r\n\r\nimport SEO from './SEO'\r\nimport theme from '../../config/theme'\r\nimport useBuildTime from '../hooks/useBuildTime'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  *,\r\n  *:before,\r\n  *:after {\r\n    box-sizing: inherit;\r\n  }\r\n  html,\r\n  body {\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n  ::selection {\r\n    color: ${props => props.theme.colors.bg};\r\n    background: ${props => props.theme.colors.primary};\r\n  }\r\n  html {\r\n    font-family: ${props => props.theme.fontFamily.sansSerif};\r\n    font-size: ${props => props.theme.baseFontSize};\r\n    h1 {\r\n      font-size: 2.5rem;\r\n    }\r\n    h2 {\r\n      font-size: 2.0rem;\r\n    }\r\n    h3 {\r\n      font-size: 1.853rem;\r\n    }\r\n    h4 {\r\n      font-size: 1.563rem;\r\n    }\r\n    h5 {\r\n      font-size: 1.25rem;\r\n    }\r\n    @media (max-width: ${props => props.theme.breakpoints.phone}) {\r\n      font-size: 16px;\r\n      h1 {\r\n        font-size: 2.488rem;\r\n      }\r\n      h2 {\r\n        font-size: 2.074rem;\r\n      }\r\n      h3 {\r\n        font-size: 1.728rem;\r\n      }\r\n      h4 {\r\n        font-size: 1.444rem;\r\n      }\r\n      h5 {\r\n        font-size: 1.2rem;\r\n      }\r\n    }\r\n  }\r\n  body {\r\n    background: ${props => props.theme.colors.bg};\r\n    color: ${props => props.theme.colors.grey.default};\r\n  }\r\n  a {\r\n    color: ${props => props.theme.colors.primary};\r\n    text-decoration: none;\r\n    transition: all ${props => props.theme.transitions.normal};\r\n  }\r\n  a:hover {\r\n    color: ${props => props.theme.colors.primaryLight};\r\n  }\r\n  a:not([href]):not([tabindex]) {\r\n    color: inherit;\r\n    text-decoration: none;\r\n    &:hover,\r\n    &:focus {\r\n      color: inherit;\r\n      text-decoration: none;\r\n    }\r\n    &:focus {\r\n      outline: 0;\r\n    }\r\n  }\r\n  h1, h2, h3, h4, h5, h6 {\r\n    color: ${props => props.theme.colors.grey.dark};\r\n    font-family: ${props => props.theme.fontFamily.serif};\r\n  }\r\n  blockquote {\r\n    font-style: italic;\r\n    position: relative;\r\n  }\r\n\r\n  blockquote:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    background: ${props => props.theme.colors.primary};\r\n    height: 100%;\r\n    width: 6px;\r\n    margin-left: -1.6rem;\r\n  }\r\n  label {\r\n    margin-bottom: .5rem;\r\n    color: ${props => props.theme.colors.grey.dark};\r\n  }\r\n  input, textarea, button {\r\n    font-size: 1rem;\r\n  }\r\n  textarea {\r\n    font-family: ${props => props.theme.fontFamily.sansSerif};\r\n  }\r\n  input, textarea {\r\n    border-radius: .5rem;\r\n    border: none;\r\n    background: rgba(0, 0, 0, 0.05);\r\n    padding: .4rem 1rem;\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n  }\r\n  pre {\r\n    margin: 0;\r\n    white-space: pre;\r\n    line-height: 1.55rem;\r\n    font-family: SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace;\r\n  }\r\n  figure {\r\n    margin: 0 0 1rem 0;\r\n  }\r\n  img {\r\n    vertical-align: middle;\r\n  }\r\n  [role='button'] {\r\n    cursor: pointer;\r\n  }\r\n  a,\r\n  area,\r\n  button,\r\n  [role='button'],\r\n  input,\r\n  label,\r\n  select,\r\n  summary,\r\n  textarea {\r\n    touch-action: manipulation;\r\n  }\r\n  table {\r\n    border-collapse: collapse;\r\n    background-color: ${props => props.theme.colors.bg};\r\n  }\r\n  caption {\r\n    padding-top: 1.5rem;\r\n    padding-bottom: 1.5rem;\r\n    color: ${props => props.theme.colors.color};\r\n    text-align: center;\r\n    caption-side: bottom;\r\n  }\r\n  th {\r\n    text-align: left;\r\n  }\r\n  fieldset {\r\n    min-width: 0;\r\n    padding: 0;\r\n    margin: 0;\r\n    border: 0;\r\n  }\r\n  legend {\r\n    display: block;\r\n    width: 100%;\r\n    padding: 0;\r\n    margin-bottom: 0.5rem;\r\n    font-size: 1.5rem;\r\n    line-height: inherit;\r\n  }\r\n  input[type='search'] {\r\n    -webkit-appearance: none;\r\n  }\r\n  output {\r\n    display: inline-block;\r\n  }\r\n  svg:not(:root) {\r\n    overflow: hidden;\r\n    vertical-align: middle;\r\n  }\r\n  code {\r\n    background-color: rgba(255,229,100,0.2);\r\n    padding: .15em .2em .05em;\r\n    border-radius: .3em;\r\n    white-space: normal;\r\n  }\r\n  [hidden] {\r\n    display: none !important;\r\n  }\r\n  .highlight-line {\r\n    background-color: rgba(201, 167, 255, 0.2);\r\n    margin: 0 -10px;\r\n    padding: 0 5px;\r\n    border-left: 5px solid #c9a7ff;\r\n  }\r\n`\r\n\r\nconst Footer = styled.footer`\r\n  text-align: center;\r\n  padding: 3rem 1rem;\r\n  span {\r\n    font-size: 0.75rem;\r\n  }\r\n`\r\n\r\nconst Layout = ({ children, customSEO }) => {\r\n  const buildTime = useBuildTime()\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <>\r\n        {!customSEO && <SEO buildTime={buildTime} />}\r\n        <GlobalStyle />\r\n        {children}\r\n        <Footer>\r\n          <code>EOF</code>\r\n        </Footer>\r\n      </>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.node]).isRequired,\r\n  customSEO: PropTypes.bool,\r\n}\r\n\r\nLayout.defaultProps = {\r\n  customSEO: false,\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'gatsby'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  margin: 6rem auto 0 auto;\r\n  a {\r\n    color: ${props => props.theme.colors.primary};\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  justify-items: center;\r\n`\r\n\r\nconst Prev = styled.div`\r\n  span {\r\n    text-transform: uppercase;\r\n    font-size: 0.8rem;\r\n    color: ${props => props.theme.colors.grey.light};\r\n  }\r\n`\r\n\r\nconst Next = styled.div`\r\n  margin-left: auto;\r\n  text-align: right;\r\n  span {\r\n    text-transform: uppercase;\r\n    font-size: 0.8rem;\r\n    color: ${props => props.theme.colors.grey.light};\r\n  }\r\n`\r\n\r\nconst PrevNext = ({ next, prev }) => (\r\n  <Wrapper>\r\n    {prev && (\r\n      <Prev>\r\n        <span>Previous</span>\r\n        <Link to={prev.fields.slug}>{prev.frontmatter.title}</Link>\r\n      </Prev>\r\n    )}\r\n\r\n    {next && (\r\n      <Next>\r\n        <span>Next</span>\r\n        <Link to={next.fields.slug}>{next.frontmatter.title}</Link>\r\n      </Next>\r\n    )}\r\n  </Wrapper>\r\n)\r\n\r\nexport default PrevNext\r\n\r\nPrevNext.propTypes = {\r\n  next: PropTypes.object,\r\n  prev: PropTypes.object,\r\n}\r\n\r\nPrevNext.defaultProps = {\r\n  next: null,\r\n  prev: null,\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst SectionTitle = styled.div`\r\n  font-size: ${props => props.theme.fontSize.small};\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  color: ${props => props.theme.colors.grey.dark};\r\n  position: relative;\r\n  padding-bottom: 1rem;\r\n  margin-top: 2rem;\r\n  margin-bottom: 4rem;\r\n\r\n  &:after {\r\n    content: '';\r\n    height: 1px;\r\n    width: 50px;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 50%;\r\n    margin-left: -25px;\r\n    background: ${props => props.theme.colors.grey.ultraLight};\r\n  }\r\n`\r\n\r\nexport default SectionTitle\r\n","import styled from 'styled-components'\r\n\r\nconst Wrapper = styled.div`\r\n  max-width: ${props => props.theme.maxWidth};\r\n  margin: 0 auto;\r\n  padding-top: 2.6rem;\r\n  @media (max-width: ${props => props.theme.breakpoints.tablet}) {\r\n    padding: 3rem 3rem;\r\n  }\r\n  @media (max-width: ${props => props.theme.breakpoints.phone}) {\r\n    padding: 2rem 1.3rem;\r\n  }\r\n\r\n  p {\r\n    font-size: 1.1rem;\r\n    letter-spacing: -0.003em;\r\n    line-height: 1.58;\r\n    --baseline-multiplier: 0.179;\r\n    --x-height-multiplier: 0.35;\r\n    @media (max-width: ${props => props.theme.breakpoints.phone}) {\r\n      font-size: 1rem;\r\n    }\r\n  }\r\n`\r\n\r\nexport default Wrapper\r\n","import Article from './Article'\r\nimport Button from './Button'\r\nimport Header from './Header'\r\nimport Layout from './Layout'\r\nimport PrevNext from './PrevNext'\r\nimport SectionTitle from './SectionTitle'\r\nimport SEO from './SEO'\r\nimport Subline from './Subline'\r\nimport Wrapper from './Wrapper'\r\n\r\nexport { Article, Button, Header, Layout, PrevNext, SectionTitle, SEO, Subline, Wrapper }\r\n"],"sourceRoot":""}