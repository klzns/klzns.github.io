{"version":3,"sources":["webpack:///./src/templates/category.js"],"names":["Category","category","pageContext","allMdx","data","nodes","totalCount","subline","title","config","siteTitle","sectionTitle","to","map","post","frontmatter","date","excerpt","timeToRead","slug","fields","categories","key","postQuery"],"mappings":"2FAAA,4IAuCeA,UA9BE,SAAC,GAAqD,IAApCC,EAAmC,EAAlDC,YAAeD,SAAoBE,EAAe,EAAvBC,KAAQD,OAC7CE,EAAsBF,EAAtBE,MAAOC,EAAeH,EAAfG,WACTC,EAAaD,EAAN,SAAuC,IAAfA,EAAmB,GAAK,KAAhD,iBAAoEL,EAApE,IAEb,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQO,MAAK,aAAeP,EAAf,MAA6BQ,IAAOC,YACjD,kBAAC,IAAD,MAEA,kBAAC,IAAD,mBAAgCT,GAChC,kBAAC,IAAD,CAASU,cAAY,GAClBJ,EADH,SACiB,kBAAC,OAAD,CAAMK,GAAG,eAAT,kBADjB,KAGCP,EAAMQ,KAAI,SAAAC,GAAI,OACb,kBAAC,IAAD,CACEN,MAAOM,EAAKC,YAAYP,MACxBQ,KAAMF,EAAKC,YAAYC,KACvBC,QAASH,EAAKG,QACdC,WAAYJ,EAAKI,WACjBC,KAAML,EAAKM,OAAOD,KAClBE,WAAYP,EAAKC,YAAYM,WAC7BC,IAAKR,EAAKM,OAAOD,aAsBtB,IAAMI,EAAS","file":"component---src-templates-category-js-57e288a292804066ba4f.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { Link, graphql } from 'gatsby'\nimport styled from 'styled-components'\n\nimport { Layout, Wrapper, Header, Subline, Article, SectionTitle } from '../components'\nimport config from '../../config'\n\nconst Category = ({ pageContext: { category }, data: { allMdx } }) => {\n  const { nodes, totalCount } = allMdx\n  const subline = `${totalCount} post${totalCount === 1 ? '' : 's'} tagged with \"${category}\"`\n\n  return (\n    <Layout>\n      <Wrapper>\n        <Helmet title={`Category: ${category} | ${config.siteTitle}`} />\n        <Header />\n\n        <SectionTitle>Category &ndash; {category}</SectionTitle>\n        <Subline sectionTitle>\n          {subline} (See <Link to=\"/categories\">all categories</Link>)\n        </Subline>\n        {nodes.map(post => (\n          <Article\n            title={post.frontmatter.title}\n            date={post.frontmatter.date}\n            excerpt={post.excerpt}\n            timeToRead={post.timeToRead}\n            slug={post.fields.slug}\n            categories={post.frontmatter.categories}\n            key={post.fields.slug}\n          />\n        ))}\n      </Wrapper>\n    </Layout>\n  )\n}\n\nexport default Category\n\nCategory.propTypes = {\n  pageContext: PropTypes.shape({\n    category: PropTypes.string.isRequired,\n  }).isRequired,\n  data: PropTypes.shape({\n    allMdx: PropTypes.shape({\n      nodes: PropTypes.array.isRequired,\n      totalCount: PropTypes.number.isRequired,\n    }),\n  }).isRequired,\n}\n\nexport const postQuery = graphql`\n  query CategoryPage($category: String!) {\n    allMdx(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { categories: { eq: $category } } }\n    ) {\n      totalCount\n      nodes {\n        frontmatter {\n          title\n          date(formatString: \"YYYY-MM-DD\")\n          categories\n        }\n        fields {\n          slug\n        }\n        excerpt(pruneLength: 200)\n        timeToRead\n      }\n    }\n  }\n`\n"],"sourceRoot":""}